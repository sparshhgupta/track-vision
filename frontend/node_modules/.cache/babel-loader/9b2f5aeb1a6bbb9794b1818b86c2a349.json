{"ast":null,"code":"var _jsxFileName = \"/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/ACT-GUI/track-vision/frontend/src/components/UploadSection.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./UploadSection.css\";\n\n// frame_numbers = [30, 40, 50];\nlet exportedFrameNumbers = [];\nfunction UploadSection({\n  csvFile,\n  onCsvUpload\n}) {\n  const [csvUploaded, setCsvUploaded] = useState(false);\n  const [logEntries, setLogEntries] = useState([]);\n  const [frameNumber, setFrameNumber] = useState(\"\");\n  const [A, setA] = useState(\"\");\n  const [B, setB] = useState(\"\");\n  useEffect(() => {\n    setCsvUploaded(!!csvFile);\n  }, [csvFile]);\n  const fetchFrameNumbers = async () => {\n    try {\n      var _response$data;\n      const response = await axios.get('http://127.0.0.1:5000/get-frame-numbers');\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.end_frames) {\n        exportedFrameNumbers = response.data.end_frames; // Update exported variable\n        alert(`Received frames: ${exportedFrameNumbers.join(', ')}`);\n      }\n    } catch (error) {\n      console.error('Error fetching frames:', error);\n    }\n  };\n  const handleCsvUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('csv', file);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob'\n      });\n      if (response.status === 200) {\n        var _contentDisposition$s;\n        const contentDisposition = response.headers['content-disposition'];\n        const filename = contentDisposition ? (_contentDisposition$s = contentDisposition.split('filename=')[1]) === null || _contentDisposition$s === void 0 ? void 0 : _contentDisposition$s.replace(/\"/g, '') : 'processed_video.mp4';\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const videoPlayer = document.querySelector('video');\n        if (videoPlayer) {\n          videoPlayer.src = url;\n          videoPlayer.load();\n        }\n        alert('CSV file processed successfully. Video updated.');\n        await fetchFrameNumbers();\n        onCsvUpload(file, exportedFrameNumbers);\n        setCsvUploaded(true);\n      } else {\n        throw new Error('Server returned non-200 status');\n      }\n    } catch (error) {\n      console.error('CSV upload error:', error);\n      let errorMessage = 'Error uploading CSV file';\n      if (error.response) {\n        // Try to get error message from response\n        if (error.response.data instanceof Blob) {\n          // If the error response is a Blob, try to read it as text\n          const text = await error.response.data.text();\n          errorMessage = text || errorMessage;\n        } else {\n          errorMessage = error.response.data.message || errorMessage;\n        }\n      } else {\n        errorMessage = error.message || errorMessage;\n      }\n      alert(errorMessage);\n    }\n  };\n  const handleLogChanges = () => {\n    if (!frameNumber.trim() || !A.trim() || !B.trim()) {\n      alert(\"Please enter all values before logging.\");\n      return;\n    }\n    setLogEntries([...logEntries, {\n      frameNumber,\n      A,\n      B\n    }]);\n    setFrameNumber(\"\");\n    setA(\"\");\n    setB(\"\");\n  };\n  const handleClearTable = async () => {\n    if (logEntries.length === 0) {\n      alert(\"No data to send.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/save-logs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          logs: logEntries\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        const newVideoUrl = `http://127.0.0.1:5000/temp/${data.new_video}`;\n        const videoPlayer = document.querySelector('video');\n        if (videoPlayer) {\n          videoPlayer.src = newVideoUrl;\n          videoPlayer.load(); // Important to reload the video\n        }\n        alert(\"Logs successfully saved to backend.\");\n        setLogEntries([]);\n      } else {\n        alert(data.message || \"Failed to update ID and reprocess video.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating ID:\", error);\n      alert(error.message || \"Error updating ID.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, !csvUploaded ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"csv-upload\",\n    className: \"upload-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Upload CSV\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"csv-upload\",\n    type: \"file\",\n    accept: \".csv\",\n    style: {\n      display: \"none\"\n    },\n    onChange: handleCsvUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"log-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Log Table\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Frame Number\",\n    value: frameNumber,\n    onChange: e => setFrameNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"A\",\n    value: A,\n    onChange: e => setA(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"B\",\n    value: B,\n    onChange: e => setB(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"correction-btn\",\n    onClick: handleLogChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Add Correction\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"correction-btn\",\n    onClick: handleClearTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"Apply Correction\"), logEntries.length > 0 && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"log-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, \"Frame Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, \"B\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, logEntries.map((entry, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, entry.frameNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, entry.A), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, entry.B)))))));\n}\n\n// export { exportedFrameNumbers };\nexport default UploadSection;","map":{"version":3,"names":["React","useState","useEffect","axios","exportedFrameNumbers","UploadSection","csvFile","onCsvUpload","csvUploaded","setCsvUploaded","logEntries","setLogEntries","frameNumber","setFrameNumber","A","setA","B","setB","fetchFrameNumbers","_response$data","response","get","data","end_frames","alert","join","error","console","handleCsvUpload","event","file","target","files","type","formData","FormData","append","post","headers","responseType","status","_contentDisposition$s","contentDisposition","filename","split","replace","url","window","URL","createObjectURL","Blob","videoPlayer","document","querySelector","src","load","Error","errorMessage","text","message","handleLogChanges","trim","handleClearTable","length","fetch","method","body","JSON","stringify","logs","json","ok","success","newVideoUrl","new_video","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","htmlFor","id","accept","style","display","onChange","placeholder","value","e","onClick","map","entry","index","key"],"sources":["/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/ACT-GUI/track-vision/frontend/src/components/UploadSection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./UploadSection.css\";\n\n// frame_numbers = [30, 40, 50];\nlet exportedFrameNumbers = [];\n\n\nfunction UploadSection({ csvFile, onCsvUpload }) {\n  const [csvUploaded, setCsvUploaded] = useState(false);\n  const [logEntries, setLogEntries] = useState([]);\n  const [frameNumber, setFrameNumber] = useState(\"\");\n  const [A, setA] = useState(\"\");\n  const [B, setB] = useState(\"\");\n\n  useEffect(() => {\n    setCsvUploaded(!!csvFile);\n  }, [csvFile]);\n\n  const fetchFrameNumbers = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get-frame-numbers');\n      if (response.data?.end_frames) {\n        exportedFrameNumbers = response.data.end_frames; // Update exported variable\n        alert(`Received frames: ${exportedFrameNumbers.join(', ')}`);\n      }\n    } catch (error) {\n      console.error('Error fetching frames:', error);\n    }\n  };\n\n  const handleCsvUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    if (file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('csv', file);\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        responseType: 'blob',\n      });\n\n      if (response.status === 200) {\n        const contentDisposition = response.headers['content-disposition'];\n        const filename = contentDisposition \n          ? contentDisposition.split('filename=')[1]?.replace(/\"/g, '') \n          : 'processed_video.mp4';\n\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const videoPlayer = document.querySelector('video');\n        if (videoPlayer) {\n          videoPlayer.src = url;\n          videoPlayer.load();\n        }\n\n        alert('CSV file processed successfully. Video updated.');\n        await fetchFrameNumbers();\n        onCsvUpload(file, exportedFrameNumbers);\n        setCsvUploaded(true);\n      } else {\n        throw new Error('Server returned non-200 status');\n      }\n    } catch (error) {\n      console.error('CSV upload error:', error);\n      \n      let errorMessage = 'Error uploading CSV file';\n      if (error.response) {\n        // Try to get error message from response\n        if (error.response.data instanceof Blob) {\n          // If the error response is a Blob, try to read it as text\n          const text = await error.response.data.text();\n          errorMessage = text || errorMessage;\n        } else {\n          errorMessage = error.response.data.message || errorMessage;\n        }\n      } else {\n        errorMessage = error.message || errorMessage;\n      }\n      \n      alert(errorMessage);\n    }\n  };\n\n  const handleLogChanges = () => {\n    if (!frameNumber.trim() || !A.trim() || !B.trim()) {\n      alert(\"Please enter all values before logging.\");\n      return;\n    }\n    \n    setLogEntries([...logEntries, { frameNumber, A, B }]);\n    setFrameNumber(\"\");\n    setA(\"\");\n    setB(\"\");\n  };\n\n  const handleClearTable = async () => {\n    if (logEntries.length === 0) {\n      alert(\"No data to send.\");\n      return;\n    }\n    \n    try {\n      const response = await fetch(\"http://localhost:5000/save-logs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ logs: logEntries }),\n      });\n      \n      const data = await response.json();\n      \n      if (response.ok && data.success) {\n        const newVideoUrl = `http://127.0.0.1:5000/temp/${data.new_video}`;\n        const videoPlayer = document.querySelector('video');\n        if (videoPlayer) {\n          videoPlayer.src = newVideoUrl;\n          videoPlayer.load(); // Important to reload the video\n        }\n        alert(\"Logs successfully saved to backend.\");\n        setLogEntries([]);\n      } else {\n        alert(data.message || \"Failed to update ID and reprocess video.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating ID:\", error);\n      alert(error.message || \"Error updating ID.\");\n    }\n  };\n\n  return (\n    <div className=\"upload-section\">\n      {!csvUploaded ? (\n        <>\n          <label htmlFor=\"csv-upload\" className=\"upload-btn\">Upload CSV</label>\n          <input\n            id=\"csv-upload\"\n            type=\"file\"\n            accept=\".csv\"\n            style={{ display: \"none\" }}\n            onChange={handleCsvUpload}\n          />\n        </>\n      ) : (\n        <div className=\"log-section\">\n          <h3>Log Table</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Frame Number\"\n            value={frameNumber}\n            onChange={(e) => setFrameNumber(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"A\"\n            value={A}\n            onChange={(e) => setA(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"B\"\n            value={B}\n            onChange={(e) => setB(e.target.value)}\n          />\n        \n        <button className=\"correction-btn\" onClick={handleLogChanges}>Add Correction</button>\n        <button className=\"correction-btn\" onClick={handleClearTable}>Apply Correction</button>\n\n\n          {logEntries.length > 0 && (\n            <table className=\"log-table\">\n              <thead>\n                <tr>\n                  <th>Frame Number</th>\n                  <th>A</th>\n                  <th>B</th>\n                </tr>\n              </thead>\n              <tbody>\n                {logEntries.map((entry, index) => (\n                  <tr key={index}>\n                    <td>{entry.frameNumber}</td>\n                    <td>{entry.A}</td>\n                    <td>{entry.B}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// export { exportedFrameNumbers };\nexport default UploadSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}