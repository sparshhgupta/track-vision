{"ast":null,"code":"var _jsxFileName = \"/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/ACT-GUI/track-vision/frontend/src/components/UploadSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./UploadSection.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet exportedFrameNumbers = [];\nfunction UploadSection({\n  csvFile,\n  onCsvUpload\n}) {\n  _s();\n  const [csvUploaded, setCsvUploaded] = useState(false);\n  const [logEntries, setLogEntries] = useState([]);\n  const [frameNumber, setFrameNumber] = useState(\"\");\n  const [A, setA] = useState(\"\");\n  const [B, setB] = useState(\"\");\n  useEffect(() => {\n    setCsvUploaded(!!csvFile);\n  }, [csvFile]);\n  const fetchFrameNumbers = async () => {\n    try {\n      var _response$data;\n      const response = await axios.get('http://127.0.0.1:5000/get-frame-numbers');\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.end_frames) {\n        exportedFrameNumbers = response.data.end_frames;\n        alert(`Received frames: ${exportedFrameNumbers.join(', ')}`);\n      }\n    } catch (error) {\n      console.error('Error fetching frames:', error);\n    }\n  };\n  const handleCsvUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('csv', file);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob'\n      });\n      if (response.status === 200) {\n        var _contentDisposition$s;\n        const contentDisposition = response.headers['content-disposition'];\n        const filename = contentDisposition ? (_contentDisposition$s = contentDisposition.split('filename=')[1]) === null || _contentDisposition$s === void 0 ? void 0 : _contentDisposition$s.replace(/\"/g, '') : 'processed_video.mp4';\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const videoPlayer = document.querySelector('video');\n        if (videoPlayer) {\n          videoPlayer.src = url;\n          videoPlayer.load();\n        }\n        alert('CSV file processed successfully. Video updated.');\n        await fetchFrameNumbers();\n        onCsvUpload(file, exportedFrameNumbers);\n        setCsvUploaded(true);\n      } else {\n        throw new Error('Server returned non-200 status');\n      }\n    } catch (error) {\n      console.error('CSV upload error:', error);\n      let errorMessage = 'Error uploading CSV file';\n      if (error.response) {\n        if (error.response.data instanceof Blob) {\n          const text = await error.response.data.text();\n          errorMessage = text || errorMessage;\n        } else {\n          errorMessage = error.response.data.message || errorMessage;\n        }\n      } else {\n        errorMessage = error.message || errorMessage;\n      }\n      alert(errorMessage);\n    }\n  };\n  const handleLogChanges = () => {\n    if (!frameNumber.trim() || !A.trim() || !B.trim()) {\n      alert(\"Please enter all values before logging.\");\n      return;\n    }\n    setLogEntries([...logEntries, {\n      frameNumber,\n      A,\n      B\n    }]);\n    setFrameNumber(\"\");\n    setA(\"\");\n    setB(\"\");\n  };\n  const handleClearTable = async () => {\n    if (logEntries.length === 0) {\n      alert(\"No data to send.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/save-logs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          logs: logEntries\n        })\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        const newVideoUrl = `http://127.0.0.1:5000/temp/${data.new_video}`;\n        const videoPlayer = document.querySelector('video');\n        if (videoPlayer) {\n          videoPlayer.src = newVideoUrl;\n          videoPlayer.load();\n        }\n        alert(\"Logs successfully saved to backend.\");\n        setLogEntries([]);\n      } else {\n        alert(data.message || \"Failed to update ID and reprocess video.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating ID:\", error);\n      alert(error.message || \"Error updating ID.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-section\",\n    children: [/*#__PURE__*/_jsxDEV(Joyride, {\n      steps: steps,\n      run: runTour,\n      continuous: true,\n      showSkipButton: true,\n      scrollToFirstStep: true,\n      styles: {\n        options: {\n          zIndex: 10000\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), !csvUploaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"csv-input\",\n        id: \"csv-upload\",\n        className: \"upload-btn\",\n        children: \"Upload CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"csv-input\",\n        type: \"file\",\n        accept: \".csv\",\n        style: {\n          display: \"none\"\n        },\n        onChange: handleCsvUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Log Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Frame Number\",\n        value: frameNumber,\n        onChange: e => setFrameNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input-a\",\n        type: \"text\",\n        placeholder: \"A\",\n        value: A,\n        onChange: e => setA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input-b\",\n        type: \"text\",\n        placeholder: \"B\",\n        value: B,\n        onChange: e => setB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add-correction\",\n        className: \"correction-btn\",\n        onClick: handleLogChanges,\n        children: \"Add Correction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"apply-correction\",\n        className: \"correction-btn\",\n        onClick: handleClearTable,\n        children: \"Apply Correction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 1\n      }, this), logEntries.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"log-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Frame Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: logEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.frameNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.A\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.B\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSection, \"lbwI6oL2jcUGKWAxA8Yr4avGBdw=\");\n_c = UploadSection;\nexport default UploadSection;\nvar _c;\n$RefreshReg$(_c, \"UploadSection\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","exportedFrameNumbers","UploadSection","csvFile","onCsvUpload","_s","csvUploaded","setCsvUploaded","logEntries","setLogEntries","frameNumber","setFrameNumber","A","setA","B","setB","fetchFrameNumbers","_response$data","response","get","data","end_frames","alert","join","error","console","handleCsvUpload","event","file","target","files","type","formData","FormData","append","post","headers","responseType","status","_contentDisposition$s","contentDisposition","filename","split","replace","url","window","URL","createObjectURL","Blob","videoPlayer","document","querySelector","src","load","Error","errorMessage","text","message","handleLogChanges","trim","handleClearTable","length","fetch","method","body","JSON","stringify","logs","json","ok","success","newVideoUrl","new_video","className","children","Joyride","steps","run","runTour","continuous","showSkipButton","scrollToFirstStep","styles","options","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","style","display","onChange","placeholder","value","e","onClick","map","entry","index","_c","$RefreshReg$"],"sources":["/Users/jaitrasaketh/Documents/Development/Multi Object Tracking/ACT-GUI/track-vision/frontend/src/components/UploadSection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./UploadSection.css\";\n\nlet exportedFrameNumbers = [];\n\nfunction UploadSection({ csvFile, onCsvUpload }) {\n  const [csvUploaded, setCsvUploaded] = useState(false);\n  const [logEntries, setLogEntries] = useState([]);\n  const [frameNumber, setFrameNumber] = useState(\"\");\n  const [A, setA] = useState(\"\");\n  const [B, setB] = useState(\"\");\n\n\n\n  useEffect(() => {\n    setCsvUploaded(!!csvFile);\n  }, [csvFile]);\n\n  const fetchFrameNumbers = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get-frame-numbers');\n      if (response.data?.end_frames) {\n        exportedFrameNumbers = response.data.end_frames;\n        alert(`Received frames: ${exportedFrameNumbers.join(', ')}`);\n      }\n    } catch (error) {\n      console.error('Error fetching frames:', error);\n    }\n  };\n\n  const handleCsvUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    if (file.type !== 'text/csv') {\n      alert('Please upload a valid CSV file.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('csv', file);\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        responseType: 'blob',\n      });\n\n      if (response.status === 200) {\n        const contentDisposition = response.headers['content-disposition'];\n        const filename = contentDisposition \n          ? contentDisposition.split('filename=')[1]?.replace(/\"/g, '') \n          : 'processed_video.mp4';\n\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const videoPlayer = document.querySelector('video');\n        if (videoPlayer) {\n          videoPlayer.src = url;\n          videoPlayer.load();\n        }\n\n        alert('CSV file processed successfully. Video updated.');\n        await fetchFrameNumbers();\n        onCsvUpload(file, exportedFrameNumbers);\n        setCsvUploaded(true);\n      } else {\n        throw new Error('Server returned non-200 status');\n      }\n    } catch (error) {\n      console.error('CSV upload error:', error);\n      let errorMessage = 'Error uploading CSV file';\n\n      if (error.response) {\n        if (error.response.data instanceof Blob) {\n          const text = await error.response.data.text();\n          errorMessage = text || errorMessage;\n        } else {\n          errorMessage = error.response.data.message || errorMessage;\n        }\n      } else {\n        errorMessage = error.message || errorMessage;\n      }\n\n      alert(errorMessage);\n    }\n  };\n\n  const handleLogChanges = () => {\n    if (!frameNumber.trim() || !A.trim() || !B.trim()) {\n      alert(\"Please enter all values before logging.\");\n      return;\n    }\n    \n    setLogEntries([...logEntries, { frameNumber, A, B }]);\n    setFrameNumber(\"\");\n    setA(\"\");\n    setB(\"\");\n  };\n\n  const handleClearTable = async () => {\n    if (logEntries.length === 0) {\n      alert(\"No data to send.\");\n      return;\n    }\n    \n    try {\n      const response = await fetch(\"http://localhost:5000/save-logs\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ logs: logEntries }),\n      });\n      \n      const data = await response.json();\n      \n      if (response.ok && data.success) {\n        const newVideoUrl = `http://127.0.0.1:5000/temp/${data.new_video}`;\n        const videoPlayer = document.querySelector('video');\n        if (videoPlayer) {\n          videoPlayer.src = newVideoUrl;\n          videoPlayer.load();\n        }\n        alert(\"Logs successfully saved to backend.\");\n        setLogEntries([]);\n      } else {\n        alert(data.message || \"Failed to update ID and reprocess video.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating ID:\", error);\n      alert(error.message || \"Error updating ID.\");\n    }\n  };\n\n  return (\n    <div className=\"upload-section\">\n      {/* 🧭 Joyride Tour */}\n      <Joyride\n        steps={steps}\n        run={runTour}\n        continuous\n        showSkipButton\n        scrollToFirstStep\n        styles={{ options: { zIndex: 10000 } }}\n      />\n\n      {!csvUploaded ? (\n        <>\n          <label htmlFor=\"csv-input\" id=\"csv-upload\" className=\"upload-btn\">Upload CSV</label>\n<input\n  id=\"csv-input\"\n  type=\"file\"\n  accept=\".csv\"\n  style={{ display: \"none\" }}\n  onChange={handleCsvUpload}\n/>\n\n        </>\n      ) : (\n        <div className=\"log-section\">\n          <h3>Log Table</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Frame Number\"\n            value={frameNumber}\n            onChange={(e) => setFrameNumber(e.target.value)}\n          />\n          <input\n  id=\"input-a\"\n  type=\"text\"\n  placeholder=\"A\"\n  value={A}\n  onChange={(e) => setA(e.target.value)}\n/>\n\n<input\n  id=\"input-b\"\n  type=\"text\"\n  placeholder=\"B\"\n  value={B}\n  onChange={(e) => setB(e.target.value)}\n/>\n\n<button id=\"add-correction\" className=\"correction-btn\" onClick={handleLogChanges}>\n  Add Correction\n</button>\n\n<button id=\"apply-correction\" className=\"correction-btn\" onClick={handleClearTable}>\n  Apply Correction\n</button>\n\n          {logEntries.length > 0 && (\n            <table className=\"log-table\">\n              <thead>\n                <tr>\n                  <th>Frame Number</th>\n                  <th>A</th>\n                  <th>B</th>\n                </tr>\n              </thead>\n              <tbody>\n                {logEntries.map((entry, index) => (\n                  <tr key={index}>\n                    <td>{entry.frameNumber}</td>\n                    <td>{entry.A}</td>\n                    <td>{entry.B}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UploadSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}